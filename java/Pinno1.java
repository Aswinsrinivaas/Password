/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.Properties;
import javax.imageio.ImageIO;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.ImageIcon;
import javax.swing.JEditorPane;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Crisp
 */
public class Pinno1 extends javax.swing.JFrame {

    int g, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27 = 0;
    Statement smt;
    String uname = null;
    String pass = null;
    String image1 = null;
    String image2 = null;
    String slider = null;
    String phone = null;
    String mail = null;
    static final String _userName = "9345031930";
    static final String _password = "12251992";
    static final String _url = "http://ubaid.tk/sms/sms.aspx";
    static final String charset = "UTF-8";
    //Statement smt;
    int id, c = 0;
    String a, b, a1, a2, a3, a4, a5 = null;
    ArrayList list = new ArrayList();

    /**
     * Creates new form Pinno
     */
    public Pinno1() {
        try {
            Connection con;
            String url = "jdbc:mysql://localhost:3306/imagepassword1";
            String driver = "com.mysql.jdbc.Driver";
            Class.forName(driver);
            con = DriverManager.getConnection(url, "root", "root");
            smt = (Statement) con.createStatement();
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        
        
        initComponents();
        int am = 0;
        
        
       // shuffle();
//         jTextField7.setHorizontalAlignment(jTextField7.LEFT);
    }
    
    Pinno1(String s) {
        try {
            Connection con;
            String url = "jdbc:mysql://localhost:3306/imagepassword1";
            String driver = "com.mysql.jdbc.Driver";
            Class.forName(driver);
            con = DriverManager.getConnection(url, "root", "root");
            smt = (Statement) con.createStatement();
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        this.a = s;
        System.out.println(a);
        initComponents();
        //shuffle();
//         jTextField7.setBackground(Color.red);
//       jTextField8.setBackground(Color.BLUE);
//       jTextField9.setBackground(Color.YELLOW);
//       jTextField10.setBackground(Color.ORANGE);
//       jTextField12.setBackground(Color.BLACK);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(550, 550));
        getContentPane().setLayout(null);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("ATM APPLICATION");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(180, 30, 190, 20);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 600, 80);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Enter your Pin number:");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(60, 150, 180, 40);
        jPanel2.add(jPasswordField1);
        jPasswordField1.setBounds(240, 150, 240, 40);

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setText(" Continue");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);
        jButton1.setBounds(210, 240, 110, 30);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 80, 600, 450);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            int i = 0;
            String s = jPasswordField1.getText();
            
       
            ResultSet rs = smt.executeQuery("select id,Image,pinnumber from register where password='" + a + "'");
            while (rs.next()) {
                id = rs.getInt("id");
                b = rs.getString("Image");
                c = rs.getInt("pinnumber");
                String d = Integer.toString(c);
                if ((s.equalsIgnoreCase(d)) ) {
                    i = 1;
                }
            }
            if (i == 1) {
                
                JOptionPane.showMessageDialog(this, "PinNumber Is Correct");
//       msg();
     // mail();
//       SmsSender1 sms=   new SmsSender1(id);
//                 
//               
//                    String testPhoneNo ="9876543210";
                JFrame f = new JFrame("Image Panel");
                f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                //f.setUndecorated(true);
                Toolkit toolkit = Toolkit.getDefaultToolkit();
                Image img = toolkit.getImage("image/" + b + ".jpg");
                ImageIcon image = new ImageIcon("image/" + b + ".jpg");
                BufferedImage bi = ImageIO.read(new File("image/" + b + ".jpg"));
                ImageBuffer_1 im = new ImageBuffer_1(bi, a);
                //  panel.add(label);
                //panel.add(button);
                f.setContentPane(im);
                
                f.pack();
                for (int j = 10; j < 600; j++) {
                    f.setBounds(500 - (j / 2), 300 - (j / 2), j, j);
                    f.setMinimumSize(new Dimension(j, j));
                    //Image scaledImage = img.getScaledInstance(j, j, Image.SCALE_DEFAULT);
                    //ImageIcon icon = new ImageIcon(scaledImage);
                    //label = new JLabel("", icon, JLabel.CENTER);
                    f.setVisible(true);
                    this.hide();
                }
            } else {
                JOptionPane.showMessageDialog(this, "PinNumber Is InCorrect");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pinno1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pinno1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pinno1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pinno1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pinno1().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField jPasswordField1;
    // End of variables declaration//GEN-END:variables
    public void msg() {
        
        try {
            ResultSet rs = smt.executeQuery("select * from register where id='" + id + "' ");
            while (rs.next()) {
                uname = rs.getString("username");
                pass = rs.getString("password");
                phone = rs.getString("phoneno");
                mail = rs.getString("mailid");
                s26 = rs.getInt("imagepixelx");
                s27 = rs.getInt("imagepixely");
                s7 = rs.getInt("ranpixelx1");
                s8 = rs.getInt("ranpixely1");
                s9 = rs.getInt("ranpixelx2");
                s10 = rs.getInt("ranpixely2");
                s11 = rs.getInt("ranpixelx3");
                s12 = rs.getInt("ranpixely3");
                s13 = rs.getInt("ranpixelx4");
                s15 = rs.getInt("ranpixely4");
                s16 = rs.getInt("ranpixelx5");
                s17 = rs.getInt("ranpixely5");
                s18 = rs.getInt("ranpixelx6");
                s19 = rs.getInt("ranpixely6");
                s20 = rs.getInt("ranpixelx7");
                s21 = rs.getInt("ranpixely7");
                s22 = rs.getInt("ranpixelx8");
                s23 = rs.getInt("ranpixely8");
                s24 = rs.getInt("ranpixelx9");
                s25 = rs.getInt("ranpixely9");
                s14 = rs.getInt("pinnumber");
                slider = rs.getString("slidercount");
                
            }
            
            String msg = "You Have Loged On To Your Account";
           // String url = "http://ubaid.tk/sms/sms.aspx?uid=9786676521&pwd=254144&msg=" + "Message:" + msg + "UserName:" + uname + "Password:" + pass + "ImagePixelX:" + image1 + "ImagePixelY:" + image2 + "SliderCount:" + slider + "&phone=" + phone + "&provider=way2sms";

//    //String url = "http://ubaid.tk/sms/sms.aspx?uid=9345031930&pwd=12251992&msg="+"ver"+"&phone=9751276580&provider=smsfi";  
//   
//    
//    //* way to send sms 2 *////
//            JEditorPane editorPane = new JEditorPane(url);
//            editorPane.setEditable(false);
////  URL url1 = new URL(url);
////URLConnection con = url1.openConnection();
            
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }

//    public void mail1() {
//        final String username = "sureshuma2008@gmail.com";
//        final String password = "04256254144";
//        
//        Properties props = new Properties();
//        props.put("mail.smtp.auth", "true");
//        props.put("mail.smtp.starttls.enable", "true");
//        props.put("mail.smtp.host", "smtp.gmail.com");
//        props.put("mail.smtp.port", "25");
//        
//        Session session = Session.getInstance(props, new javax.mail.Authenticator() {
//            protected PasswordAuthentication getPasswordAuthentication() {
//                return new PasswordAuthentication(username, password);
//            }
//        });
//        
//        try {
//            String msg = "You Have Loged On To Your Account";
//            Message message = new MimeMessage(session);
//            message.setFrom(new InternetAddress("sureshuma2008@gmail.com"));
//            message.setRecipients(Message.RecipientType.TO,
//                    InternetAddress.parse(mail));
//            message.setSubject("Testing Subject");
//            message.setText("Message:" + msg + "UserName:" + uname + "Password:" + pass + "ImagePixelX:" + s26 + "ImagePixelY:" + s27 + "ImagePixelX:" + s7 + "ImagePixelY:" + s8 + "ImagePixelX:" + s9 + "ImagePixelY:" + s10 + "ImagePixelX:" + s11 + "ImagePixelY:" + s12 + "ImagePixelX:" + s13 + "ImagePixelY:" + s15 + "ImagePixelY:" + s16 + "ImagePixelY:" + s17 + "ImagePixelY:" + s18 + "ImagePixelY:" + s19 + "ImagePixelY:" + s20 + "ImagePixelY:" + s21 + "ImagePixelY:" + s22 + "ImagePixelY:" + s23 + "ImagePixelY:" + s24 + "ImagePixelY:" + s25 + "SliderCount:" + slider);
//            //message.setText("Message:"+msg+"PinNumber:"+s14);
//            
//            Transport.send(message);
//            
//            System.out.println("Done");
//            
//        } catch (MessagingException e) {
//            throw new RuntimeException(e);
//        }
//    }

 public void mail(){
     

        final String username = "karpalagar@gmail.com";
        final String password = "aguz yqyh xskg eytv"; // update here

		Properties prop = new Properties();
		prop.put("mail.smtp.host", "smtp.gmail.com");
        prop.put("mail.smtp.port", "465");
        prop.put("mail.smtp.auth", "true");
        prop.put("mail.smtp.socketFactory.port", "465");
        prop.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
        
        Session session = Session.getInstance(prop,
                new javax.mail.Authenticator() {
                    protected PasswordAuthentication getPasswordAuthentication() {
                        return new PasswordAuthentication(username, password);
                    }
                });

        try {
String msg = "You Have Loged On To Your Account";
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress("karpalagar@gmail.com"));
            message.setRecipients(
                    Message.RecipientType.TO,
                    InternetAddress.parse(mail)
            );
            message.setSubject("Testing Gmail SSL");
            message.setText("Message:" + msg + "UserName:" + uname + "Password:" + pass + "ImagePixelX:" + s26 + "ImagePixelY:" + s27 + "ImagePixelX:" + s7 + "ImagePixelY:" + s8 + "ImagePixelX:" + s9 + "ImagePixelY:" + s10 + "ImagePixelX:" + s11 + "ImagePixelY:" + s12 + "ImagePixelX:" + s13 + "ImagePixelY:" + s15 + "ImagePixelY:" + s16 + "ImagePixelY:" + s17 + "ImagePixelY:" + s18 + "ImagePixelY:" + s19 + "ImagePixelY:" + s20 + "ImagePixelY:" + s21 + "ImagePixelY:" + s22 + "ImagePixelY:" + s23 + "ImagePixelY:" + s24 + "ImagePixelY:" + s25 + "SliderCount:" + slider);

            Transport.send(message);

            System.out.println("Done");

        } catch (MessagingException e) {
            e.printStackTrace();
        }
 }
}
